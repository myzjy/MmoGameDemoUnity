---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangjingyi.
--- DateTime: 2023/5/19 18:44
---
printDebug("加载 ProtocolManager.lua 文件")

protocols = {}

ProtocolManager = {}
local json = require("Common.json")

-- table扩展方法，map的大小
function table.mapSize(map)
    local size = 0
    for _, _ in pairs(map) do
        size = size + 1
    end
    return size
end

function ProtocolManager.getProtocol(protocolId)
    local protocol = protocols[protocolId]
    if protocol == nil then
        error("[protocolId:" .. protocolId .. "]协议不存在")
    end
    return protocol
end

function ProtocolManager.write(buffer, packet)

    local protocolId = packet:protocolId()
    -- 写入包体
    ProtocolManager.getProtocol(protocolId):write(buffer, packet)
end
---读取
---@param buffer ByteBuffer 字节读取器
function ProtocolManager.read(buffer)
    local jsonString = buffer:readString()
    if Debug > 0 then
        printDebug("ProtocolManager.read[line 41] jsonString:" .. jsonString)
    end
    local jsonData = json.decode(jsonString);
    ---获取对应id
    local protocolId = jsonData.protocolId
    local byteBuffer = require("Game.Net.LuaProtocol.Buffer.ByteBuffer"):new()
    --- 把json字符串放入字节器中
    byteBuffer:writeString(jsonString)
    --- 返回对应的结构
    return ProtocolManager.getProtocol(protocolId):read(byteBuffer)
end

function ProtocolManager.initProtocolManager()
    local error = require("Game.Net.LuaProtocol.Common.Error")
    local loginResponse = require("Game.Net.LuaProtocol.Login.LoginResponse")
    protocols[101] = error
    protocols[1001] = loginResponse

end

return ProtocolManager



