---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2024/7/7 下午8:47
---
Debug = 0
ConfigurationDevice = {}
CS = CS
local function Init()
    Debug = CS.FrostEngine.SettingsUtils.DebugConfig()
end
Init()
handleLuaExceptionIdx = 0

function __G__TRACKBACK__(exceptionMsg)
    local msg = string.format("[%d] %s\n", handleLuaExceptionIdx, tostring(exceptionMsg))
    local str = "LUA ERROR: " .. msg
    local strMsg = "----------------------------------------\n"..str.."\n"..debug.traceback().."\n----------------------------------------"
    if FrostLogE then
        FrostLogE(strMsg)
    else
        print(strMsg)
    end
    handleLuaExceptionIdx = handleLuaExceptionIdx + 1
end
local function main()
    print("main 函数")
end
local status, msg = pcall(main, __G__TRACKBACK__)
if not status then
    print('xpcall robot main error' .. type(status) .. "," .. msg)
end

function LuaInit()
    ---@type FrostEngine.GameModule
    GameModule = CS.FrostEngine.GameModule
    SettingModule = CS.FrostEngine.ModuleSystem.GetModule("SettingModule")
    RootModules = CS.FrostEngine.ModuleSystem.GetModule("RootModules")
    math.randomseed(os.time())
    require("game.Include")
    ServiceManager:Initialize()
    NetMessageService:Connect(SettingModule.ServerSettings.ApiWebSocketUrl)
end
function LuaMain()
    GameStageService:SetPendingStage(GlobalEnum.EStage.Init, nil, true)
end
function LuaTick(deltaTime)
    ScheduleService:Update(deltaTime)
end